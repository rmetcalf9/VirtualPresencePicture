version: '1.0'
steps:
  test_all_the_code:
    image: metcarob/docker-ws-caller:0.2.5
    working_directory: ${{main_clone}}/server
    commands:
      - pip3 install -r ./src/requirements.txt
      - pip3 install -r ./testContainer/requirements.txt
      - nosetests --rednose ./test

  build_the_image:
    working_directory: ${{main_clone}}/server
    type: build
    image_name: metcarob/virtualpresencepicture
    tag: ${{CF_BRANCH_TAG_NORMALIZED}}

  build_the_test_image:
    working_directory: ${{main_clone}}/server/testContainer
    type: build
    image_name: metcarob/virtualpresencepicturetest
    tag: develop
    dockerfile: ./Dockerfile

  container_level_tests:
    type: composition
    title: Container level tests
    composition:
      version: '2'
      services:
        virtualpresencepicture:
          image: ${{build_the_image}}
          environment:
            - APIAPP_APIURL=http://virtualpresencepicture:8098/api
            - APIAPP_APIDOCSURL=http://virtualpresencepicture:8098/apidocs
    composition_candidates:
      virtualpresencepicturetest:
        image: ${{build_the_test_image}}
        command: /ext_volume/run_tests_with_wait.sh

  push_to_dockerhub:
    type: push
    title: Push to Docker hub
    description: description
    candidate: ${{build_the_image}}
    tag: ${{CF_BRANCH_TAG_NORMALIZED}}
    image_name: metcarob/virtualpresencepicture
    registry: dockerhub

  #Deploy new container to my website swarm
  #https://codefresh.io/docs/docs/deploy-your-containers/docker-swarm/#deploy-to-docker-swarm-using-the-pipelines-ui-deploy-step
#  deploy_to_metcarob_swarm:
#      image: codefresh/remote-docker
#      working_directory: ${{main_clone}}
#      commands:
#        - rdocker ${{RDOCKER_HOST}} docker run --network main_net --name virtualpresencepicture_${{CF_BRANCH_TAG_NORMALIZED}} -p 8098:8098 -e APIAPP_APIURL="https://api.metcarob.com/virtualpresencepicture/api" -e APIAPP_APIDOCSURL="https://api.metcarob.com/virtualpresencepicture/apidocs" -d metcarob/virtualpresencepicture:${{CF_BRANCH_TAG_NORMALIZED}}
#      environment:
#        - SSH_KEY=${{SSH_KEY}}
#        - SSH_PORT=${{SSH_PORT}}

  deploy_to_metcarob_swarm:
      image: codefresh/remote-docker
      working_directory: ${{main_clone}}
      commands:
        - export SSH_KEY=$(echo ${SSH_KEY_COMMAS}) \&\& rdocker ${{RDOCKER_HOST}} docker ps
      environment:
        - SSH_KEY_COMMAS=${{SSH_KEY}}
        - SSH_PORT=${{SSH_PORT}}
        - SPLIT_CHAR=${{SPLIT_CHAR}}


#Add Kong upstream with 0% to website swarm
