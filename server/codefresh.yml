version: '1.0'
steps:

  #This file deploys a new version of the API to production.
  #If version is x.y.z (xy and z are numbers)
  # x is the major version
  #API URL's
  #https://api.metcarob.com/virtualpresencepicture/test/V{MAJOR_VERSION} = Test endpoint
  #https://api.metcarob.com/virtualpresencepicture/V{MAJOR_VERSION} = Live endpoint
  #  APIDOCS will never work from test endpoint since it sends http redirects
  #
  #This process will not remove containers as they are superceeded. This is to allow a manual fallback process

  test_all_the_code:
    image: metcarob/docker-ws-caller:0.3.3
    working_directory: ${{main_clone}}/server
    commands:
      - pip3 install -r ./src/requirements.txt
      - pip3 install -r ./testContainer/requirements.txt
      - nosetests --rednose ./test

  build_the_image:
    working_directory: ${{main_clone}}/server
    type: build
    image_name: metcarob/virtualpresencepicture
    tag: ${{CF_BRANCH_TAG_NORMALIZED}}

  build_the_test_image:
    working_directory: ${{main_clone}}/server/testContainer
    type: build
    image_name: metcarob/virtualpresencepicturetest
    tag: develop
    dockerfile: ./Dockerfile

  container_level_tests:
    type: composition
    title: Container level tests
    composition:
      version: '2'
      services:
        virtualpresencepicture:
          image: ${{build_the_image}}
          environment:
            - APIAPP_APIURL=http://virtualpresencepicture:8098/api
            - APIAPP_APIDOCSURL=http://virtualpresencepicture:8098/apidocs
    composition_candidates:
      virtualpresencepicturetest:
        image: ${{build_the_test_image}}
        command: /ext_volume/run_tests_with_wait.sh
        environment:
          - EXPECTED_CONTAINER_VERSION=${{CF_BRANCH_TAG_NORMALIZED}}

  push_to_dockerhub:
    type: push
    title: Push to Docker hub
    description: description
    candidate: ${{build_the_image}}
    tag: ${{CF_BRANCH_TAG_NORMALIZED}}
    image_name: metcarob/virtualpresencepicture
    registry: dockerhub

  #Deploy new container to my website swarm
  #https://codefresh.io/docs/docs/deploy-your-containers/docker-swarm/#deploy-to-docker-swarm-using-the-pipelines-ui-deploy-step
  deploy_to_metcarob_swarm:
      image: codefresh/remote-docker
      working_directory: ${{main_clone}}
      commands:
        - rdocker ${{RDOCKER_HOST}} docker run --network main_net --name virtualpresencepicture_${{CF_BRANCH_TAG_NORMALIZED}} -e APIAPP_APIURL="https://api.metcarob.com/virtualpresencepicture/v${VERSION%%.*}/api" -e APIAPP_APIDOCSURL="https://api.metcarob.com/virtualpresencepicture/v${VERSION%%.*}/apidocs" -d metcarob/virtualpresencepicture:${{CF_BRANCH_TAG_NORMALIZED}}
      environment:
        - SSH_KEY=${{SSH_KEY_COMMAS}}
        - SSH_PORT=${{SSH_PORT}}
        - SPLIT_CHAR=${{SPLIT_CHAR}}
        - VERSION=${{CF_BRANCH_TAG_NORMALIZED}}

  # Connect test endpoint to new container
  connect_test_endpoint:
    image: codefresh/remote-docker
    working_directory: ${{main_clone}}
    commands:
#      - rdocker ${{RDOCKER_HOST}} docker run --rm -it --network main_net --entrypoint kong_test metcarob/docker-ws-caller:0.3.0 http://kong:8001
      - rdocker ${{RDOCKER_HOST}} docker run --rm -it --network main_net --entrypoint kong_install_service_and_route 
        metcarob/docker-ws-caller:0.3.3
        http://kong:8001
        virtualpresencepicture_TEST http virtualpresencepicture_${{CF_BRANCH_TAG_NORMALIZED}} 8098 /
        https api.metcarob.com /virtualpresencepicture/test/v${VERSION%%.*} GET null null true
    environment:
      - SSH_KEY=${{SSH_KEY_COMMAS}}
      - SSH_PORT=${{SSH_PORT}}
      - SPLIT_CHAR=${{SPLIT_CHAR}}
      - VERSION=${{CF_BRANCH_TAG_NORMALIZED}}

  # Test test endpoint including version test
  run_container_tests_against_test_endpoint:
    image: ${{build_the_test_image}}
    working_directory: ${{main_clone}}/server
    commands:
      - nosetests --rednose /ext_volume
    environment:
      - EXPECTED_CONTAINER_VERSION=${{CF_BRANCH_TAG_NORMALIZED}}
      - BASEURL_TO_TEST=https://api.metcarob.com/virtualpresencepicture/test/v0

# Connect to main service
#  We need route - https://api.metcarob.com /virtualpresencepicture/v${VERSION%%.*}
#  Service name - virtualpresencepicture_VXX pointing to : http://Useupstream
#  upstream : http://virtualpresencepicture_${{CF_BRANCH_TAG_NORMALIZED}}:8098
#    make it 100%
#    make all others 0%
      
# Possible future steps - test main endpoint and fail back if it is not working

